#include "ros/ros.h"

#include "nav_msgs/Path.h"
#include "geometry_msgs/Pose.h"
#include "geometry_msgs/PoseStamped.h"
#include "geometry_msgs/PoseArray.h"

#include <tf/tf.h>
#include "led.h"

ros::Subscriber local_path;  
nav_msgs::Path current_path; 

bool heard_path = false;  

void path_cb(const nav_msgs::Path::ConstPtr& msg) {
  current_path = *msg; 
  heard_path = true; 
}

int main(int argc, char **argv) {
  ros::init(argc, argv, "turn_monitor_test");
  ros::NodeHandle n; 
  
  local_path = n.subscribe("/move_base/EBandPlannerROS/global_plan", 1, path_cb);
  
  while(!heard_path) {
	  ROS_INFO("No path found."); 
	  ros::spinOnce(); 
  }
  
  ROS_INFO("Path found"); 
  
  while(ros::ok()) {
	ros::spinOnce(); 
	for(int i = 0; i < current_path.poses.size(); i++) {
	  double yaw = tf::getYaw(current_path.poses[i].pose.orientation); 
	  ROS_INFO("Orientaton %d: %f", i, yaw); 
	}
  }  
  
  return 0;  
}
